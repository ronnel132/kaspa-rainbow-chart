{"ast":null,"code":"var _jsxFileName = \"/Users/ronnel/programming/kaspa-rainbow-chart/src/Chart.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, LogarithmicScale, TimeScale, PointElement, LineElement, Title, Tooltip, Legend, Filler } from 'chart.js';\nimport 'chartjs-adapter-date-fns';\nimport annotationPlugin from 'chartjs-plugin-annotation';\nimport zoomPlugin from 'chartjs-plugin-zoom';\n\n// Register necessary components\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, LogarithmicScale, TimeScale, PointElement, LineElement, Title, Tooltip, Legend, Filler, annotationPlugin, zoomPlugin);\nconst getResistancePrice = daysSinceGb => {\n  return parseFloat((Math.pow(10, -13.14005841) * Math.pow(daysSinceGb, 4.218461)).toFixed(7));\n};\nconst getFairPrice = daysSinceGb => {\n  return parseFloat((Math.pow(10, -13.25978043) * Math.pow(daysSinceGb, 4.218461)).toFixed(7));\n};\nconst getSupportPrice = daysSinceGb => {\n  return parseFloat((Math.pow(10, -13.37950245) * Math.pow(daysSinceGb, 4.218461)).toFixed(7));\n};\nconst PriceChart = ({\n  priceData\n}) => {\n  _s();\n  const chartRef = useRef(null);\n  useEffect(() => {\n    const chart = chartRef.current;\n    if (chart) {\n      chart.canvas.ondblclick = () => {\n        chart.resetZoom();\n      };\n    }\n  }, []);\n  const startDate = new Date('2021-11-07');\n  const days = Array.from({\n    length: 3650 - 100 + 1\n  }, (_, i) => i + 100); // Example for 100 to 3650 days\n  const dates = days.map(day => {\n    const date = new Date(startDate);\n    date.setDate(startDate.getDate() + day);\n    return date;\n  });\n  const resistancePrices = days.map(getResistancePrice);\n  const fairPrices = days.map(getFairPrice);\n  const supportPrices = days.map(getSupportPrice);\n  const annotations = dates.filter(date => date.getDate() === startDate.getDate() && date.getMonth() === startDate.getMonth()) // Filter for the same day and month each year\n  .map(date => ({\n    type: 'line',\n    xMin: date.getTime(),\n    xMax: date.getTime(),\n    borderColor: 'rgba(255, 255, 255, 1)',\n    // White color\n    borderWidth: 1,\n    label: {\n      enabled: true,\n      content: date.toISOString().split('T')[0],\n      position: 'top',\n      backgroundColor: 'rgba(255, 255, 255, 1)',\n      color: 'black'\n    }\n  }));\n  const data = {\n    labels: dates.map(date => date.getTime()),\n    datasets: [{\n      label: 'Resistance Price',\n      data: resistancePrices,\n      borderColor: 'rgba(255, 0, 0, 1)',\n      // Red color for better contrast\n      fill: false,\n      pointRadius: 0,\n      pointHitRadius: 10 // Increase hit radius for better hover detection\n    }, {\n      label: 'Fair Price',\n      data: fairPrices,\n      borderColor: 'rgba(0, 128, 0, 1)',\n      // Green color for better contrast\n      fill: '-1',\n      // Fill between this dataset and the one above\n      pointRadius: 0,\n      pointHitRadius: 10 // Increase hit radius for better hover detection\n    }, {\n      label: 'Support Price',\n      data: supportPrices,\n      borderColor: 'rgba(0, 0, 255, 1)',\n      // Blue color for better contrast\n      fill: false,\n      pointRadius: 0,\n      pointHitRadius: 10 // Increase hit radius for better hover detection\n    }, {\n      label: 'Price Data',\n      data: priceData.map(item => ({\n        x: new Date(item.date).getTime(),\n        y: item.price\n      })),\n      borderColor: 'rgba(255, 165, 0, 1)',\n      // Orange color for price data\n      backgroundColor: 'rgba(255, 165, 0, 0.2)',\n      // Light orange for fill\n      fill: true,\n      pointRadius: 3,\n      pointHitRadius: 10 // Increase hit radius for better hover detection\n    }]\n  };\n  const options = {\n    scales: {\n      x: {\n        type: 'time',\n        time: {\n          unit: 'year',\n          tooltipFormat: 'yyyy-MM-dd',\n          displayFormats: {\n            year: 'yyyy-MM-dd'\n          }\n        },\n        title: {\n          display: true,\n          text: 'Date',\n          color: '#ffffff' // White color for x-axis title\n        },\n        ticks: {\n          color: '#ffffff',\n          // White color for x-axis ticks\n          callback: function (value, index, values) {\n            const date = new Date(value);\n            return ' ' + date.toISOString().split('T')[0]; // Add space before date to move it left\n          }\n        }\n      },\n      y: {\n        type: 'logarithmic',\n        title: {\n          display: true,\n          text: 'Price',\n          color: '#ffffff' // White color for y-axis title\n        },\n        ticks: {\n          color: '#ffffff',\n          // White color for y-axis ticks\n          callback: function (value) {\n            const logValue = Math.log10(value);\n            if (Number.isInteger(logValue)) {\n              return value;\n            }\n            return null;\n          }\n        }\n      }\n    },\n    plugins: {\n      annotation: {\n        annotations: annotations\n      },\n      zoom: {\n        zoom: {\n          drag: {\n            enabled: true,\n            borderColor: 'rgba(54, 162, 235, 0.5)',\n            borderWidth: 1,\n            backgroundColor: 'rgba(54, 162, 235, 0.3)'\n          },\n          mode: 'xy'\n        },\n        pan: {\n          enabled: false\n        }\n      },\n      tooltip: {\n        callbacks: {\n          label: function (context) {\n            const label = context.dataset.label || '';\n            const value = context.raw || '';\n            return `${label}: ${value}`;\n          }\n        },\n        mode: 'index',\n        intersect: false\n      },\n      legend: {\n        labels: {\n          color: '#ffffff' // White color for legend labels\n        }\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      backgroundColor: '#000000',\n      padding: '20px'\n    },\n    children: [\" \", /*#__PURE__*/_jsxDEV(Line, {\n      ref: chartRef,\n      data: data,\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 210,\n    columnNumber: 5\n  }, this);\n};\n_s(PriceChart, \"X+1SfQQ6xefXNU27aQW843M7cTw=\");\n_c = PriceChart;\nexport default PriceChart;\nvar _c;\n$RefreshReg$(_c, \"PriceChart\");","map":{"version":3,"names":["React","useRef","useEffect","Line","Chart","ChartJS","CategoryScale","LinearScale","LogarithmicScale","TimeScale","PointElement","LineElement","Title","Tooltip","Legend","Filler","annotationPlugin","zoomPlugin","jsxDEV","_jsxDEV","register","getResistancePrice","daysSinceGb","parseFloat","Math","pow","toFixed","getFairPrice","getSupportPrice","PriceChart","priceData","_s","chartRef","chart","current","canvas","ondblclick","resetZoom","startDate","Date","days","Array","from","length","_","i","dates","map","day","date","setDate","getDate","resistancePrices","fairPrices","supportPrices","annotations","filter","getMonth","type","xMin","getTime","xMax","borderColor","borderWidth","label","enabled","content","toISOString","split","position","backgroundColor","color","data","labels","datasets","fill","pointRadius","pointHitRadius","item","x","y","price","options","scales","time","unit","tooltipFormat","displayFormats","year","title","display","text","ticks","callback","value","index","values","logValue","log10","Number","isInteger","plugins","annotation","zoom","drag","mode","pan","tooltip","callbacks","context","dataset","raw","intersect","legend","style","padding","children","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/ronnel/programming/kaspa-rainbow-chart/src/Chart.js"],"sourcesContent":["import React, { useRef, useEffect } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  LogarithmicScale,\n  TimeScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n  Filler,\n} from 'chart.js';\nimport 'chartjs-adapter-date-fns';\nimport annotationPlugin from 'chartjs-plugin-annotation';\nimport zoomPlugin from 'chartjs-plugin-zoom';\n\n// Register necessary components\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  LogarithmicScale,\n  TimeScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n  Filler,\n  annotationPlugin,\n  zoomPlugin\n);\n\nconst getResistancePrice = (daysSinceGb) => {\n  return parseFloat((Math.pow(10, -13.14005841) * Math.pow(daysSinceGb, 4.218461)).toFixed(7));\n};\nconst getFairPrice = (daysSinceGb) => {\n  return parseFloat((Math.pow(10, -13.25978043) * Math.pow(daysSinceGb, 4.218461)).toFixed(7));\n};\nconst getSupportPrice = (daysSinceGb) => {\n  return parseFloat((Math.pow(10, -13.37950245) * Math.pow(daysSinceGb, 4.218461)).toFixed(7));\n};\n\nconst PriceChart = ({ priceData }) => {\n  const chartRef = useRef(null);\n\n  useEffect(() => {\n    const chart = chartRef.current;\n\n    if (chart) {\n      chart.canvas.ondblclick = () => {\n        chart.resetZoom();\n      };\n    }\n  }, []);\n\n  const startDate = new Date('2021-11-07');\n  const days = Array.from({ length: 3650 - 100 + 1 }, (_, i) => i + 100); // Example for 100 to 3650 days\n  const dates = days.map(day => {\n    const date = new Date(startDate);\n    date.setDate(startDate.getDate() + day);\n    return date;\n  });\n  const resistancePrices = days.map(getResistancePrice);\n  const fairPrices = days.map(getFairPrice);\n  const supportPrices = days.map(getSupportPrice);\n\n  const annotations = dates\n    .filter(date => date.getDate() === startDate.getDate() && date.getMonth() === startDate.getMonth()) // Filter for the same day and month each year\n    .map(date => ({\n      type: 'line',\n      xMin: date.getTime(),\n      xMax: date.getTime(),\n      borderColor: 'rgba(255, 255, 255, 1)', // White color\n      borderWidth: 1,\n      label: {\n        enabled: true,\n        content: date.toISOString().split('T')[0],\n        position: 'top',\n        backgroundColor: 'rgba(255, 255, 255, 1)',\n        color: 'black',\n      }\n    }));\n\n  const data = {\n    labels: dates.map(date => date.getTime()),\n    datasets: [\n      {\n        label: 'Resistance Price',\n        data: resistancePrices,\n        borderColor: 'rgba(255, 0, 0, 1)', // Red color for better contrast\n        fill: false,\n        pointRadius: 0,\n        pointHitRadius: 10, // Increase hit radius for better hover detection\n      },\n      {\n        label: 'Fair Price',\n        data: fairPrices,\n        borderColor: 'rgba(0, 128, 0, 1)', // Green color for better contrast\n        fill: '-1', // Fill between this dataset and the one above\n        pointRadius: 0,\n        pointHitRadius: 10, // Increase hit radius for better hover detection\n      },\n      {\n        label: 'Support Price',\n        data: supportPrices,\n        borderColor: 'rgba(0, 0, 255, 1)', // Blue color for better contrast\n        fill: false,\n        pointRadius: 0,\n        pointHitRadius: 10, // Increase hit radius for better hover detection\n      },\n      {\n        label: 'Price Data',\n        data: priceData.map(item => ({\n          x: new Date(item.date).getTime(),\n          y: item.price,\n        })),\n        borderColor: 'rgba(255, 165, 0, 1)', // Orange color for price data\n        backgroundColor: 'rgba(255, 165, 0, 0.2)', // Light orange for fill\n        fill: true,\n        pointRadius: 3,\n        pointHitRadius: 10, // Increase hit radius for better hover detection\n      },\n    ],\n  };\n\n  const options = {\n    scales: {\n      x: {\n        type: 'time',\n        time: {\n          unit: 'year',\n          tooltipFormat: 'yyyy-MM-dd',\n          displayFormats: {\n            year: 'yyyy-MM-dd',\n          }\n        },\n        title: {\n          display: true,\n          text: 'Date',\n          color: '#ffffff', // White color for x-axis title\n        },\n        ticks: {\n          color: '#ffffff', // White color for x-axis ticks\n          callback: function (value, index, values) {\n            const date = new Date(value);\n            return ' ' + date.toISOString().split('T')[0]; // Add space before date to move it left\n          },\n        },\n      },\n      y: {\n        type: 'logarithmic',\n        title: {\n          display: true,\n          text: 'Price',\n          color: '#ffffff', // White color for y-axis title\n        },\n        ticks: {\n          color: '#ffffff', // White color for y-axis ticks\n          callback: function (value) {\n            const logValue = Math.log10(value);\n            if (Number.isInteger(logValue)) {\n              return value;\n            }\n            return null;\n          },\n        },\n      },\n    },\n    plugins: {\n      annotation: {\n        annotations: annotations\n      },\n      zoom: {\n        zoom: {\n          drag: {\n            enabled: true,\n            borderColor: 'rgba(54, 162, 235, 0.5)',\n            borderWidth: 1,\n            backgroundColor: 'rgba(54, 162, 235, 0.3)',\n          },\n          mode: 'xy',\n        },\n        pan: {\n          enabled: false,\n        },\n      },\n      tooltip: {\n        callbacks: {\n          label: function(context) {\n            const label = context.dataset.label || '';\n            const value = context.raw || '';\n            return `${label}: ${value}`;\n          }\n        },\n        mode: 'index',\n        intersect: false,\n      },\n      legend: {\n        labels: {\n          color: '#ffffff' // White color for legend labels\n        }\n      }\n    },\n  };\n\n  return (\n    <div style={{ backgroundColor: '#000000', padding: '20px' }}> {/* Black background for better contrast */}\n      <Line ref={chartRef} data={data} options={options} />\n    </div>\n  );\n};\n\nexport default PriceChart;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
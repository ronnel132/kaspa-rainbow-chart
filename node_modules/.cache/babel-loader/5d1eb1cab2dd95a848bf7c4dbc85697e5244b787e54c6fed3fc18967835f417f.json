{"ast":null,"code":"var _jsxFileName = \"/Users/ronnel/programming/kaspa-rainbow-chart/src/Chart.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, LogarithmicScale, TimeScale, PointElement, LineElement, Title, Tooltip, Legend, Filler } from 'chart.js';\nimport 'chartjs-adapter-date-fns';\nimport annotationPlugin from 'chartjs-plugin-annotation';\nimport zoomPlugin from 'chartjs-plugin-zoom';\n\n// Register necessary components\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, LogarithmicScale, TimeScale, PointElement, LineElement, Title, Tooltip, Legend, Filler, annotationPlugin, zoomPlugin);\nconst getResistancePrice = daysSinceGb => {\n  return parseFloat((Math.pow(10, -13.14005841) * Math.pow(daysSinceGb, 4.218461)).toFixed(7));\n};\nconst getFairPrice = daysSinceGb => {\n  return parseFloat((Math.pow(10, -13.25978043) * Math.pow(daysSinceGb, 4.218461)).toFixed(7));\n};\nconst getSupportPrice = daysSinceGb => {\n  return parseFloat((Math.pow(10, -13.37950245) * Math.pow(daysSinceGb, 4.218461)).toFixed(7));\n};\nconst PriceChart = ({\n  priceData\n}) => {\n  _s();\n  const chartRef = useRef(null);\n  useEffect(() => {\n    const chart = chartRef.current;\n    if (chart) {\n      chart.canvas.ondblclick = () => {\n        chart.resetZoom();\n      };\n    }\n  }, [chartRef]);\n  const startDate = new Date('2021-11-07');\n  const endDate = new Date('2027-01-01');\n  const days = Array.from({\n    length: 3650 - 100 + 1\n  }, (_, i) => i + 100); // Example for 100 to 3650 days\n  const dates = days.map(day => {\n    const date = new Date(startDate);\n    date.setDate(startDate.getDate() + day);\n    return date;\n  });\n  const resistancePrices = days.map(getResistancePrice);\n  const fairPrices = days.map(getFairPrice);\n  const supportPrices = days.map(getSupportPrice);\n  const annotations = dates.filter(date => date.getDate() === startDate.getDate() && date.getMonth() === startDate.getMonth()) // Filter for the same day and month each year\n  .map(date => ({\n    type: 'line',\n    xMin: date.getTime(),\n    xMax: date.getTime(),\n    borderColor: 'rgba(255, 255, 255, 1)',\n    // White color\n    borderWidth: 1,\n    label: {\n      enabled: true,\n      content: date.toISOString().split('T')[0],\n      position: 'top',\n      backgroundColor: 'rgba(255, 255, 255, 1)',\n      color: 'black'\n    }\n  }));\n  const priceDataPoints = Array.isArray(priceData) ? priceData.map(item => ({\n    x: new Date(item.date).getTime(),\n    y: item.price\n  })) : [];\n  const data = {\n    labels: dates.map(date => date.getTime()),\n    datasets: [{\n      label: 'Resistance Price',\n      data: resistancePrices,\n      borderColor: 'rgba(255, 99, 132, 1)',\n      // Red color for Resistance Price\n      backgroundColor: 'rgba(255, 99, 132, 1)',\n      fill: false,\n      pointRadius: 0,\n      pointHitRadius: 10,\n      // Increase hit radius for better hover detection\n      borderWidth: 1 // Make line thinner\n    }, {\n      label: 'Fair Price',\n      data: fairPrices,\n      borderColor: 'rgba(54, 162, 235, 1)',\n      // Blue color for Fair Price\n      backgroundColor: 'rgba(54, 162, 235, 1)',\n      fill: false,\n      // Disable fill\n      pointRadius: 0,\n      pointHitRadius: 10,\n      // Increase hit radius for better hover detection\n      borderWidth: 1 // Make line thinner\n    }, {\n      label: 'Support Price',\n      data: supportPrices,\n      borderColor: 'rgba(75, 192, 192, 1)',\n      // Teal color for Support Price\n      backgroundColor: 'rgba(75, 192, 192, 1)',\n      fill: false,\n      pointRadius: 0,\n      pointHitRadius: 10,\n      // Increase hit radius for better hover detection\n      borderWidth: 1 // Make line thinner\n    }, {\n      label: 'Price Data',\n      data: priceDataPoints,\n      borderColor: 'rgba(255, 165, 0, 1)',\n      // Orange color for Price Data\n      backgroundColor: 'rgba(255, 165, 0, 1)',\n      fill: false,\n      pointRadius: 0,\n      // Remove points\n      pointHitRadius: 10,\n      // Increase hit radius for better hover detection\n      borderWidth: 1,\n      // Make line thinner\n      order: 1 // Ensure price data overlays other lines\n    }]\n  };\n  const options = {\n    scales: {\n      x: {\n        type: 'time',\n        time: {\n          unit: 'year',\n          tooltipFormat: 'yyyy-MM-dd',\n          displayFormats: {\n            year: 'yyyy-MM-dd'\n          }\n        },\n        min: startDate.getTime(),\n        max: endDate.getTime(),\n        title: {\n          display: true,\n          text: 'Date'\n        },\n        ticks: {\n          callback: function (value, index, values) {\n            const date = new Date(value);\n            return ' ' + date.toISOString().split('T')[0]; // Add space before date to move it left\n          }\n        }\n      },\n      y: {\n        type: 'logarithmic',\n        title: {\n          display: true,\n          text: 'Price'\n        },\n        ticks: {\n          callback: function (value) {\n            const logValue = Math.log10(value);\n            if (Number.isInteger(logValue)) {\n              return value;\n            }\n            return null;\n          }\n        }\n      }\n    },\n    plugins: {\n      annotation: {\n        annotations: annotations\n      },\n      zoom: {\n        zoom: {\n          drag: {\n            enabled: true,\n            borderColor: 'rgba(54, 162, 235, 0.5)',\n            borderWidth: 1,\n            backgroundColor: 'rgba(54, 162, 235, 0.3)'\n          },\n          mode: 'xy'\n        },\n        pan: {\n          enabled: false\n        }\n      },\n      tooltip: {\n        callbacks: {\n          label: function (context) {\n            const index = context.dataIndex;\n            const datasets = context.chart.data.datasets;\n            const resistance = datasets[0].data[index];\n            const fair = datasets[1].data[index];\n            const support = datasets[2].data[index];\n            const price = priceDataPoints[index] && priceDataPoints[index].y !== undefined ? priceDataPoints[index].y : 'N/A';\n            return [`Resistance Price: ${resistance}`, `Fair Price: ${fair}`, `Support Price: ${support}`, `Price Data: ${price}`];\n          },\n          labelColor: function (context) {\n            const colors = {\n              'Resistance Price': {\n                borderColor: 'rgba(255, 99, 132, 1)',\n                backgroundColor: 'rgba(255, 99, 132, 1)'\n              },\n              'Fair Price': {\n                borderColor: 'rgba(54, 162, 235, 1)',\n                backgroundColor: 'rgba(54, 162, 235, 1)'\n              },\n              'Support Price': {\n                borderColor: 'rgba(75, 192, 192, 1)',\n                backgroundColor: 'rgba(75, 192, 192, 1)'\n              },\n              'Price Data': {\n                borderColor: 'rgba(255, 165, 0, 1)',\n                backgroundColor: 'rgba(255, 165, 0, 1)'\n              }\n            };\n            return colors[context.dataset.label];\n          }\n        },\n        mode: 'nearest',\n        intersect: true // Only show tooltip when intersecting with an element\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Line, {\n      ref: chartRef,\n      data: data,\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 231,\n    columnNumber: 5\n  }, this);\n};\n_s(PriceChart, \"X+1SfQQ6xefXNU27aQW843M7cTw=\");\n_c = PriceChart;\nexport default PriceChart;\nvar _c;\n$RefreshReg$(_c, \"PriceChart\");","map":{"version":3,"names":["React","useRef","useEffect","Line","Chart","ChartJS","CategoryScale","LinearScale","LogarithmicScale","TimeScale","PointElement","LineElement","Title","Tooltip","Legend","Filler","annotationPlugin","zoomPlugin","jsxDEV","_jsxDEV","register","getResistancePrice","daysSinceGb","parseFloat","Math","pow","toFixed","getFairPrice","getSupportPrice","PriceChart","priceData","_s","chartRef","chart","current","canvas","ondblclick","resetZoom","startDate","Date","endDate","days","Array","from","length","_","i","dates","map","day","date","setDate","getDate","resistancePrices","fairPrices","supportPrices","annotations","filter","getMonth","type","xMin","getTime","xMax","borderColor","borderWidth","label","enabled","content","toISOString","split","position","backgroundColor","color","priceDataPoints","isArray","item","x","y","price","data","labels","datasets","fill","pointRadius","pointHitRadius","order","options","scales","time","unit","tooltipFormat","displayFormats","year","min","max","title","display","text","ticks","callback","value","index","values","logValue","log10","Number","isInteger","plugins","annotation","zoom","drag","mode","pan","tooltip","callbacks","context","dataIndex","resistance","fair","support","undefined","labelColor","colors","dataset","intersect","children","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/ronnel/programming/kaspa-rainbow-chart/src/Chart.js"],"sourcesContent":["import React, { useRef, useEffect } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  LogarithmicScale,\n  TimeScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n  Filler,\n} from 'chart.js';\nimport 'chartjs-adapter-date-fns';\nimport annotationPlugin from 'chartjs-plugin-annotation';\nimport zoomPlugin from 'chartjs-plugin-zoom';\n\n// Register necessary components\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  LogarithmicScale,\n  TimeScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n  Filler,\n  annotationPlugin,\n  zoomPlugin\n);\n\nconst getResistancePrice = (daysSinceGb) => {\n  return parseFloat((Math.pow(10, -13.14005841) * Math.pow(daysSinceGb, 4.218461)).toFixed(7));\n};\nconst getFairPrice = (daysSinceGb) => {\n  return parseFloat((Math.pow(10, -13.25978043) * Math.pow(daysSinceGb, 4.218461)).toFixed(7));\n};\nconst getSupportPrice = (daysSinceGb) => {\n  return parseFloat((Math.pow(10, -13.37950245) * Math.pow(daysSinceGb, 4.218461)).toFixed(7));\n};\n\nconst PriceChart = ({ priceData }) => {\n  const chartRef = useRef(null);\n\n  useEffect(() => {\n    const chart = chartRef.current;\n    if (chart) {\n      chart.canvas.ondblclick = () => {\n        chart.resetZoom();\n      };\n    }\n  }, [chartRef]);\n\n  const startDate = new Date('2021-11-07');\n  const endDate = new Date('2027-01-01');\n  const days = Array.from({ length: 3650 - 100 + 1 }, (_, i) => i + 100); // Example for 100 to 3650 days\n  const dates = days.map(day => {\n    const date = new Date(startDate);\n    date.setDate(startDate.getDate() + day);\n    return date;\n  });\n  const resistancePrices = days.map(getResistancePrice);\n  const fairPrices = days.map(getFairPrice);\n  const supportPrices = days.map(getSupportPrice);\n\n  const annotations = dates\n    .filter(date => date.getDate() === startDate.getDate() && date.getMonth() === startDate.getMonth()) // Filter for the same day and month each year\n    .map(date => ({\n      type: 'line',\n      xMin: date.getTime(),\n      xMax: date.getTime(),\n      borderColor: 'rgba(255, 255, 255, 1)', // White color\n      borderWidth: 1,\n      label: {\n        enabled: true,\n        content: date.toISOString().split('T')[0],\n        position: 'top',\n        backgroundColor: 'rgba(255, 255, 255, 1)',\n        color: 'black',\n      }\n    }));\n\n  const priceDataPoints = Array.isArray(priceData) ? priceData.map(item => ({\n    x: new Date(item.date).getTime(),\n    y: item.price,\n  })) : [];\n\n  const data = {\n    labels: dates.map(date => date.getTime()),\n    datasets: [\n      {\n        label: 'Resistance Price',\n        data: resistancePrices,\n        borderColor: 'rgba(255, 99, 132, 1)', // Red color for Resistance Price\n        backgroundColor: 'rgba(255, 99, 132, 1)',\n        fill: false,\n        pointRadius: 0,\n        pointHitRadius: 10, // Increase hit radius for better hover detection\n        borderWidth: 1, // Make line thinner\n      },\n      {\n        label: 'Fair Price',\n        data: fairPrices,\n        borderColor: 'rgba(54, 162, 235, 1)', // Blue color for Fair Price\n        backgroundColor: 'rgba(54, 162, 235, 1)',\n        fill: false, // Disable fill\n        pointRadius: 0,\n        pointHitRadius: 10, // Increase hit radius for better hover detection\n        borderWidth: 1, // Make line thinner\n      },\n      {\n        label: 'Support Price',\n        data: supportPrices,\n        borderColor: 'rgba(75, 192, 192, 1)', // Teal color for Support Price\n        backgroundColor: 'rgba(75, 192, 192, 1)',\n        fill: false,\n        pointRadius: 0,\n        pointHitRadius: 10, // Increase hit radius for better hover detection\n        borderWidth: 1, // Make line thinner\n      },\n      {\n        label: 'Price Data',\n        data: priceDataPoints,\n        borderColor: 'rgba(255, 165, 0, 1)', // Orange color for Price Data\n        backgroundColor: 'rgba(255, 165, 0, 1)',\n        fill: false,\n        pointRadius: 0, // Remove points\n        pointHitRadius: 10, // Increase hit radius for better hover detection\n        borderWidth: 1, // Make line thinner\n        order: 1, // Ensure price data overlays other lines\n      },\n    ],\n  };\n\n  const options = {\n    scales: {\n      x: {\n        type: 'time',\n        time: {\n          unit: 'year',\n          tooltipFormat: 'yyyy-MM-dd',\n          displayFormats: {\n            year: 'yyyy-MM-dd',\n          }\n        },\n        min: startDate.getTime(),\n        max: endDate.getTime(),\n        title: {\n          display: true,\n          text: 'Date',\n        },\n        ticks: {\n          callback: function (value, index, values) {\n            const date = new Date(value);\n            return ' ' + date.toISOString().split('T')[0]; // Add space before date to move it left\n          },\n        },\n      },\n      y: {\n        type: 'logarithmic',\n        title: {\n          display: true,\n          text: 'Price',\n        },\n        ticks: {\n          callback: function (value) {\n            const logValue = Math.log10(value);\n            if (Number.isInteger(logValue)) {\n              return value;\n            }\n            return null;\n          },\n        },\n      },\n    },\n    plugins: {\n      annotation: {\n        annotations: annotations\n      },\n      zoom: {\n        zoom: {\n          drag: {\n            enabled: true,\n            borderColor: 'rgba(54, 162, 235, 0.5)',\n            borderWidth: 1,\n            backgroundColor: 'rgba(54, 162, 235, 0.3)',\n          },\n          mode: 'xy',\n        },\n        pan: {\n          enabled: false,\n        },\n      },\n      tooltip: {\n        callbacks: {\n          label: function(context) {\n            const index = context.dataIndex;\n            const datasets = context.chart.data.datasets;\n            const resistance = datasets[0].data[index];\n            const fair = datasets[1].data[index];\n            const support = datasets[2].data[index];\n            const price = priceDataPoints[index] && priceDataPoints[index].y !== undefined ? priceDataPoints[index].y : 'N/A';\n            return [\n              `Resistance Price: ${resistance}`,\n              `Fair Price: ${fair}`,\n              `Support Price: ${support}`,\n              `Price Data: ${price}`\n            ];\n          },\n          labelColor: function(context) {\n            const colors = {\n              'Resistance Price': { borderColor: 'rgba(255, 99, 132, 1)', backgroundColor: 'rgba(255, 99, 132, 1)' },\n              'Fair Price': { borderColor: 'rgba(54, 162, 235, 1)', backgroundColor: 'rgba(54, 162, 235, 1)' },\n              'Support Price': { borderColor: 'rgba(75, 192, 192, 1)', backgroundColor: 'rgba(75, 192, 192, 1)' },\n              'Price Data': { borderColor: 'rgba(255, 165, 0, 1)', backgroundColor: 'rgba(255, 165, 0, 1)' },\n            };\n            return colors[context.dataset.label];\n          }\n        },\n        mode: 'nearest',\n        intersect: true, // Only show tooltip when intersecting with an element\n      },\n    },\n  };\n\n  return (\n    <div>\n      <Line ref={chartRef} data={data} options={options} />\n    </div>\n  );\n};\n\nexport default PriceChart;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
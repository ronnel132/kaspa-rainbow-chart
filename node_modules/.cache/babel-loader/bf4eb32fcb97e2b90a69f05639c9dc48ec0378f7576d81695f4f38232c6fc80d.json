{"ast":null,"code":"var _jsxFileName = \"/Users/ronnel/programming/kaspa-rainbow-chart/src/Chart.js\";\nimport React from 'react';\nimport { Line } from 'react-chartjs-2';\nimport 'chartjs-plugin-annotation';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getResistancePrice = daysSinceGb => {\n  return parseFloat((Math.pow(10, -13.14005841) * Math.pow(daysSinceGb, 4.218461)).toFixed(7));\n};\nconst getFairPrice = daysSinceGb => {\n  return parseFloat((Math.pow(10, -13.25978043) * Math.pow(daysSinceGb, 4.218461)).toFixed(7));\n};\nconst getSupportPrice = daysSinceGb => {\n  return parseFloat((Math.pow(10, -13.37950245) * Math.pow(daysSinceGb, 4.218461)).toFixed(7));\n};\nconst Chart = () => {\n  const days = Array.from({\n    length: 365\n  }, (_, i) => i + 1); // Example for 1 year (365 days)\n  const resistancePrices = days.map(getResistancePrice);\n  const fairPrices = days.map(getFairPrice);\n  const supportPrices = days.map(getSupportPrice);\n  const data = {\n    labels: days,\n    datasets: [{\n      label: 'Resistance Price',\n      data: resistancePrices,\n      borderColor: 'rgba(255, 99, 132, 1)',\n      fill: false,\n      pointRadius: 0\n    }, {\n      label: 'Fair Price',\n      data: fairPrices,\n      borderColor: 'rgba(54, 162, 235, 1)',\n      fill: '-1',\n      // Fill between this dataset and the one above\n      pointRadius: 0\n    }, {\n      label: 'Support Price',\n      data: supportPrices,\n      borderColor: 'rgba(75, 192, 192, 1)',\n      fill: false,\n      pointRadius: 0\n    }]\n  };\n  const options = {\n    scales: {\n      x: {\n        title: {\n          display: true,\n          text: 'Days Since Gb'\n        }\n      },\n      y: {\n        title: {\n          display: true,\n          text: 'Price'\n        }\n      }\n    },\n    plugins: {\n      annotation: {\n        annotations: [{\n          type: 'box',\n          yScaleID: 'y',\n          yMin: Math.min(...supportPrices),\n          yMax: Math.max(...fairPrices),\n          backgroundColor: 'rgba(75, 192, 192, 0.1)'\n        }, {\n          type: 'box',\n          yScaleID: 'y',\n          yMin: Math.max(...fairPrices),\n          yMax: Math.max(...resistancePrices),\n          backgroundColor: 'rgba(255, 99, 132, 0.1)'\n        }]\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Line, {\n    data: data,\n    options: options\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 10\n  }, this);\n};\n_c = Chart;\nexport default Chart;\nvar _c;\n$RefreshReg$(_c, \"Chart\");","map":{"version":3,"names":["React","Line","jsxDEV","_jsxDEV","getResistancePrice","daysSinceGb","parseFloat","Math","pow","toFixed","getFairPrice","getSupportPrice","Chart","days","Array","from","length","_","i","resistancePrices","map","fairPrices","supportPrices","data","labels","datasets","label","borderColor","fill","pointRadius","options","scales","x","title","display","text","y","plugins","annotation","annotations","type","yScaleID","yMin","min","yMax","max","backgroundColor","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/ronnel/programming/kaspa-rainbow-chart/src/Chart.js"],"sourcesContent":["import React from 'react';\nimport { Line } from 'react-chartjs-2';\nimport 'chartjs-plugin-annotation';\n\nconst getResistancePrice = (daysSinceGb) => {\n  return parseFloat((Math.pow(10, -13.14005841) * Math.pow(daysSinceGb, 4.218461)).toFixed(7));\n};\nconst getFairPrice = (daysSinceGb) => {\n  return parseFloat((Math.pow(10, -13.25978043) * Math.pow(daysSinceGb, 4.218461)).toFixed(7));\n};\nconst getSupportPrice = (daysSinceGb) => {\n  return parseFloat((Math.pow(10, -13.37950245) * Math.pow(daysSinceGb, 4.218461)).toFixed(7));\n};\n\nconst Chart = () => {\n  const days = Array.from({ length: 365 }, (_, i) => i + 1); // Example for 1 year (365 days)\n  const resistancePrices = days.map(getResistancePrice);\n  const fairPrices = days.map(getFairPrice);\n  const supportPrices = days.map(getSupportPrice);\n\n  const data = {\n    labels: days,\n    datasets: [\n      {\n        label: 'Resistance Price',\n        data: resistancePrices,\n        borderColor: 'rgba(255, 99, 132, 1)',\n        fill: false,\n        pointRadius: 0,\n      },\n      {\n        label: 'Fair Price',\n        data: fairPrices,\n        borderColor: 'rgba(54, 162, 235, 1)',\n        fill: '-1', // Fill between this dataset and the one above\n        pointRadius: 0,\n      },\n      {\n        label: 'Support Price',\n        data: supportPrices,\n        borderColor: 'rgba(75, 192, 192, 1)',\n        fill: false,\n        pointRadius: 0,\n      },\n    ],\n  };\n\n  const options = {\n    scales: {\n      x: {\n        title: {\n          display: true,\n          text: 'Days Since Gb',\n        },\n      },\n      y: {\n        title: {\n          display: true,\n          text: 'Price',\n        },\n      },\n    },\n    plugins: {\n      annotation: {\n        annotations: [\n          {\n            type: 'box',\n            yScaleID: 'y',\n            yMin: Math.min(...supportPrices),\n            yMax: Math.max(...fairPrices),\n            backgroundColor: 'rgba(75, 192, 192, 0.1)',\n          },\n          {\n            type: 'box',\n            yScaleID: 'y',\n            yMin: Math.max(...fairPrices),\n            yMax: Math.max(...resistancePrices),\n            backgroundColor: 'rgba(255, 99, 132, 0.1)',\n          },\n        ],\n      },\n    },\n  };\n\n  return <Line data={data} options={options} />;\n};\n\nexport default Chart;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}